node{
   stage('SCM Checkout'){
     git 'https://github.com/RamBeast111/my-app.git'
   }
   stage('Compile-Package'){
      
      def mvnHome =  tool name: 'maven3', type: 'maven'   
      sh "${mvnHome}/bin/mvn clean package"
	       sh 'mv target/myweb*.war target/newapp.war'
   }
    stage('SonarQube Analysis') {
                def mvnHome =  tool name: 'maven3', type: 'maven'
                withSonarQubeEnv('sonar') { 
                sh "${mvnHome}/bin/mvn sonar:sonar"
               }
           }
   }
 stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                    // true = set pipeline to UNSTABLE, false = don't
                    waitForQualityGate abortPipeline: true  
                } 
             }
     }	     
